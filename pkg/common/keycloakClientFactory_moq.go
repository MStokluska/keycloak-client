// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package common

import (
	types "github.com/integr8ly/keycloak-client/pkg/types"
	"sync"
)

// Ensure, that KeycloakClientFactoryMock does implement KeycloakClientFactory.
// If this is not the case, regenerate this file with moq.
var _ KeycloakClientFactory = &KeycloakClientFactoryMock{}

// KeycloakClientFactoryMock is a mock implementation of KeycloakClientFactory.
//
// 	func TestSomethingThatUsesKeycloakClientFactory(t *testing.T) {
//
// 		// make and configure a mocked KeycloakClientFactory
// 		mockedKeycloakClientFactory := &KeycloakClientFactoryMock{
// 			AuthenticatedClientFunc: func(kc types.Keycloak) (KeycloakInterface, error) {
// 				panic("mock out the AuthenticatedClient method")
// 			},
// 		}
//
// 		// use mockedKeycloakClientFactory in code that requires KeycloakClientFactory
// 		// and then make assertions.
//
// 	}
type KeycloakClientFactoryMock struct {
	// AuthenticatedClientFunc mocks the AuthenticatedClient method.
	AuthenticatedClientFunc func(kc types.Keycloak) (KeycloakInterface, error)

	// calls tracks calls to the methods.
	calls struct {
		// AuthenticatedClient holds details about calls to the AuthenticatedClient method.
		AuthenticatedClient []struct {
			// Kc is the kc argument value.
			Kc types.Keycloak
		}
	}
	lockAuthenticatedClient sync.RWMutex
}

// AuthenticatedClient calls AuthenticatedClientFunc.
func (mock *KeycloakClientFactoryMock) AuthenticatedClient(kc types.Keycloak) (KeycloakInterface, error) {
	if mock.AuthenticatedClientFunc == nil {
		panic("KeycloakClientFactoryMock.AuthenticatedClientFunc: method is nil but KeycloakClientFactory.AuthenticatedClient was just called")
	}
	callInfo := struct {
		Kc types.Keycloak
	}{
		Kc: kc,
	}
	mock.lockAuthenticatedClient.Lock()
	mock.calls.AuthenticatedClient = append(mock.calls.AuthenticatedClient, callInfo)
	mock.lockAuthenticatedClient.Unlock()
	return mock.AuthenticatedClientFunc(kc)
}

// AuthenticatedClientCalls gets all the calls that were made to AuthenticatedClient.
// Check the length with:
//     len(mockedKeycloakClientFactory.AuthenticatedClientCalls())
func (mock *KeycloakClientFactoryMock) AuthenticatedClientCalls() []struct {
	Kc types.Keycloak
} {
	var calls []struct {
		Kc types.Keycloak
	}
	mock.lockAuthenticatedClient.RLock()
	calls = mock.calls.AuthenticatedClient
	mock.lockAuthenticatedClient.RUnlock()
	return calls
}
